name: Mobile App Robot Test CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    name: Run Robot Tests with APK from URL File
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment variables
        run: |
          echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "$ANDROID_HOME/tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/tools/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
    
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: |
          pip install -r Libraries/requirement.txt
          pip install gdown
          npm install -g appium

      - name: Download APK from URL in Libraries/apkUrl.txt
        run: |
          URL=$(cat Libraries/apkUrl.txt)
          echo "Downloading APK from $URL"
          gdown "$URL" -O app.apk

      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses

      - name: Create and start emulator
        run: |
          echo "yes" | sdkmanager --install "system-images;android-30;google_apis;x86_64"
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" -d "pixel_c"
          nohup emulator -avd test -no-window -no-audio -no-snapshot &
      
      - name: Wait for emulator to boot
        run: |
          adb wait-for-device
          bootanim=""
          until [[ "$bootanim" == "stopped" ]]; do
            bootanim=$(adb shell getprop init.svc.bootanim 2>/dev/null | tr -d '\r')
            sleep 5
          done
          echo "âœ… Emulator ready"

      - name: Start Appium Server in Background
        run: |
          nohup appium > appium.log 2>&1 &
          sleep 10  # Biarkan Appium stabil

      - name: Install APK on Emulator
        run: adb install app.apk

      - name: Run Robot Framework Tests 
        run: |
          echo "ðŸ”Ž Starting Robot Framework tests"
          robot -d results Test/

      - name: Upload Robot Framework results
        uses: actions/upload-artifact@v4
        with:
          name: robot-results
          path: results/
