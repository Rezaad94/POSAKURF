name: Mobile App Robot Test CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    name: Run Robot Tests with APK from URL File
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: |
          pip install -r Libraries/requirement.txt
          pip install gdown
          npm install -g appium

      - name: Download APK from URL in Libraries/apkUrl.txt
        run: |
          URL=$(cat Libraries/apkUrl.txt)
          echo "Downloading APK from $URL"
          gdown "$URL" -O app.apk

      - name: Start emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        continue-on-error: true
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel
          disable-animations: true
          script: |
            mkdir -p $HOME/.android
            touch $HOME/.android/emu-update-last-check.ini

            echo "⏳ Waiting for emulator boot..."
            BOOT_COMPLETED=""
            until [[ "$BOOT_COMPLETED" == "1" ]]; do
                BOOT_COMPLETED=$(adb shell getprop sys.boot_completed | tr -d '\r')
                sleep 2
            done

            echo "✅ Emulator booted. Extra wait for stability..."
            sleep 10

            # Disable animations
            adb shell settings put global window_animation_scale 0.0 || true
            adb shell settings put global transition_animation_scale 0.0 || true
            adb shell settings put global animator_duration_scale 0.0 || true

            # Start Appium
            nohup appium > appium.log 2>&1 &
            sleep 10

            # Install APK
            adb install app.apk

            # Run Robot tests
            robot -d results Test/


      - name: Upload Robot Framework results
        uses: actions/upload-artifact@v4
        with:
          name: robot-results
          path: results/
